{"version":3,"file":"static/js/547.6aa7f6f7.chunk.js","mappings":"oOACA,EAAuB,0BAAvB,EAAuD,yBAAvD,EAAwF,2B,mCCoFxF,MA9EA,WACE,OAAgCA,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,OAAQ,KAFV,eAAOC,EAAP,KAAiBC,EAAjB,KAKMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,KAElCC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,IAEJ,IAAMQ,EAAa,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACdZ,GAAY,kBACPD,GADM,cAERF,EAAOe,IAEX,EAeKC,EAAQ,WACZb,EAAY,CACVH,KAAM,GACNC,OAAQ,IAEX,EAED,OACE,kBAAMgB,SArBa,SAAAJ,GACnBA,EAAMK,iBADsB,gBAENZ,GAFM,IAE5B,2BAAgC,CAAC,IAAtBa,EAAqB,QAC9B,GACEjB,EAASF,KAAKoB,sBAAwBD,EAAQnB,KAAKoB,oBAEnD,OAAOC,EAAAA,OAAAA,QAAA,UAAkBnB,EAASF,KAA3B,4BAEV,CAR2B,+BAS5BI,GAASkB,EAAAA,EAAAA,IAAWpB,IACpBc,GACD,EAU+BO,UAAWC,EAAzC,WACE,sCACO,mBACL,kBACED,UAAWC,EACXC,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRb,MAAOb,EAASF,KAChB6B,SAAUjB,QAGd,mBACA,wCACS,mBACP,kBACEW,UAAWC,EACXC,KAAK,MACLzB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRb,MAAOb,EAASD,OAChB4B,SAAUjB,QAGd,mBACA,mBAAQW,UAAWC,EAASC,KAAK,SAAjC,2BAKL,EC/Ec,SAASK,IACtB,OACE,0BACE,SAAC,EAAD,KAKL,C","sources":["webpack://react-homework-template/./src/components/ContactsForm/ContactForm.module.css?78ec","components/ContactsForm/ContactsForm.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__Vl2ry\",\"btn\":\"ContactForm_btn__KmqvG\",\"input\":\"ContactForm_input__rSICO\"};","import { useState, useEffect } from 'react';\nimport css from './ContactForm.module.css';\nimport { Notify } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addContact, fetchContacts } from 'redux/contacts/operations';\nimport { addContact, fetchContacts } from 'redux/contacts/contacts-operations';\n\nfunction Form() {\n  const [dataForm, setDataForm] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const nameChange = event => {\n    const { name, value } = event.target;\n    setDataForm({\n      ...dataForm,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    for (const contact of contacts) {\n      if (\n        dataForm.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\n      ) {\n        return Notify.failure(`${dataForm.name} is already in contacts.`);\n      }\n    }\n    dispatch(addContact(dataForm));\n    reset();\n  };\n\n  const reset = () => {\n    setDataForm({\n      name: '',\n      number: '',\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n        Name <br />\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={dataForm.name}\n          onChange={nameChange}\n        />\n      </label>\n      <br />\n      <label>\n        Number <br />\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={dataForm.number}\n          onChange={nameChange}\n        />\n      </label>\n      <br />\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import ContactForm from 'components/ContactsForm/ContactsForm';\n// import Filter from 'components/Filter';\n// import css from './Contacts.module.css';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <ContactForm />\n     \n      \n    </div>\n  );\n}\n"],"names":["useState","name","number","dataForm","setDataForm","dispatch","useDispatch","contacts","useSelector","state","items","useEffect","fetchContacts","nameChange","event","target","value","reset","onSubmit","preventDefault","contact","toLocaleLowerCase","Notify","addContact","className","css","type","pattern","title","required","onChange","Contacts"],"sourceRoot":""}