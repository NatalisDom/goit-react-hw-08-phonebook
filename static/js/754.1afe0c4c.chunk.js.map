{"version":3,"file":"static/js/754.1afe0c4c.chunk.js","mappings":"0OACA,EAAuB,0BAAvB,EAAuD,yBAAvD,EAAwF,2B,wCCoFxF,MA9EA,WACE,OAAgCA,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,OAAQ,KAFV,eAAOC,EAAP,KAAiBC,EAAjB,KAKMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,KAElCC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,IAEJ,IAAMQ,EAAa,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACdZ,GAAY,kBACPD,GADM,cAERF,EAAOe,IAEX,EAeKC,EAAQ,WACZb,EAAY,CACVH,KAAM,GACNC,OAAQ,IAEX,EAED,OACE,kBAAMgB,SArBa,SAAAJ,GACnBA,EAAMK,iBADsB,gBAENZ,GAFM,IAE5B,2BAAgC,CAAC,IAAtBa,EAAqB,QAC9B,GACEjB,EAASF,KAAKoB,sBAAwBD,EAAQnB,KAAKoB,oBAEnD,OAAOC,EAAAA,OAAAA,QAAA,UAAkBnB,EAASF,KAA3B,4BAEV,CAR2B,+BAS5BI,GAASkB,EAAAA,EAAAA,IAAWpB,IACpBc,GACD,EAU+BO,UAAWC,EAAzC,WACE,sCACO,mBACL,kBACED,UAAWC,EACXC,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRb,MAAOb,EAASF,KAChB6B,SAAUjB,QAGd,mBACA,wCACS,mBACP,kBACEW,UAAWC,EACXC,KAAK,MACLzB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRb,MAAOb,EAASD,OAChB4B,SAAUjB,QAGd,mBACA,mBAAQW,UAAWC,EAASC,KAAK,SAAjC,2BAKL,EClFD,EAAsB,yBAAtB,EAAsD,0BAAtD,EAAuF,0BCO1EK,GAAsBC,E,QAAAA,IACjC,CAH4B,SAAAvB,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,EAFP,SAAAD,GAAK,OAAIA,EAAMF,SAAS0B,MAAnB,IAM/B,SAAC1B,EAAU0B,GACT,IAAMC,EAAgBD,EAAOE,cAE7B,OAAO5B,EAAS0B,QAAO,SAAAb,GAAO,OAC5BA,EAAQnB,KAAKkC,cAAcC,SAASF,EADR,GAG/B,ICVUG,EAAO,WAClB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXgC,GAAiB9B,EAAAA,EAAAA,IAAYuB,GAEnC,OACE,eAAIP,UAAWC,EAAf,SACGa,EAAeC,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIvC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/B,OACE,gBAAasB,UAAWC,EAAxB,UACGxB,EADH,KACWC,GACT,mBACEsB,UAAWC,EACXgB,QAAS,WACPpC,GAASqC,EAAAA,EAAAA,IAAcF,GACxB,EAJH,sBAFOA,EAYZ,KAGN,EC5BD,EAAyB,uBAAzB,EAAwD,sB,UCmBxD,EAfe,WACb,IAAMnC,GAAWC,EAAAA,EAAAA,MACjB,OACE,gBAAKkB,UAAWC,EAAhB,UACE,sDAEE,kBACED,UAAWC,EACXK,SAAU,SAAAhB,GAAK,OAAIT,GAASsC,EAAAA,EAAAA,IAAc7B,EAAMC,OAAOC,OAAxC,QAKxB,ECjBD,EAA4B,4BCIb,SAAS4B,IACtB,OACE,iBAAKpB,UAAWC,EAAhB,WACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAACY,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactsForm/ContactForm.module.css?78ec","components/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__Vl2ry\",\"btn\":\"ContactForm_btn__KmqvG\",\"input\":\"ContactForm_input__rSICO\"};","import { useState, useEffect } from 'react';\nimport css from './ContactForm.module.css';\nimport { Notify } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addContact, fetchContacts } from 'redux/contacts/operations';\nimport { addContact, fetchContacts } from 'redux/contacts/contacts-operations';\n\nfunction Form() {\n  const [dataForm, setDataForm] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const nameChange = event => {\n    const { name, value } = event.target;\n    setDataForm({\n      ...dataForm,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    for (const contact of contacts) {\n      if (\n        dataForm.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\n      ) {\n        return Notify.failure(`${dataForm.name} is already in contacts.`);\n      }\n    }\n    dispatch(addContact(dataForm));\n    reset();\n  };\n\n  const reset = () => {\n    setDataForm({\n      name: '',\n      number: '',\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n        Name <br />\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={dataForm.name}\n          onChange={nameChange}\n        />\n      </label>\n      <br />\n      <label>\n        Number <br />\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={dataForm.number}\n          onChange={nameChange}\n        />\n      </label>\n      <br />\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactList_btn__6Piat\",\"name\":\"ContactList_name__UCkFW\",\"list\":\"ContactList_list__csErn\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllTasks = state => state.contacts.contacts.items;\n\nexport const selectVisibleFilter = createSelector(\n  [selectAllTasks, selectFilter],\n  (contacts, filter) => {\n    const workingFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(workingFilter)\n    );\n  }\n);","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { selectVisibleFilter } from 'redux/contacts/contacts-selectors';\n\nexport const List = () => {\n  const dispatch = useDispatch();\n  const contactsFilter = useSelector(selectVisibleFilter);\n\n  return (\n    <ul className={css.list}>\n      {contactsFilter.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={css.name}>\n            {name}: {number}\n            <button\n              className={css.btn}\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n\nList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"input\":\"Filter_input__N7T3z\"};","// import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contacts-slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className={css.filter}>\n      <label>\n        Find contacts by name\n        <input\n          className={css.input}\n          onChange={event => dispatch(filterContact(event.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   filter: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\"};","import  Form  from 'components/ContactsForm/ContactsForm';\nimport { List }  from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter';\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  return (\n    <div className={css.container}>\n      <Form />\n      <Filter />\n      <List />\n    </div>\n  );\n}\n"],"names":["useState","name","number","dataForm","setDataForm","dispatch","useDispatch","contacts","useSelector","state","items","useEffect","fetchContacts","nameChange","event","target","value","reset","onSubmit","preventDefault","contact","toLocaleLowerCase","Notify","addContact","className","css","type","pattern","title","required","onChange","selectVisibleFilter","createSelector","filter","workingFilter","toLowerCase","includes","List","contactsFilter","map","id","onClick","deleteContact","filterContact","Contacts"],"sourceRoot":""}