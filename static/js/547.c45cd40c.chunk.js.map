{"version":3,"file":"static/js/547.c45cd40c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"btn\":\"ContactsForm_btn__qImoL\"};","import { useState, useEffect } from 'react';\nimport css from './ContactsForm.module.css';\nimport { Notify } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addContact, fetchContacts } from 'redux/contacts/operations';\nimport { addContact, fetchContacts } from 'redux/contacts/contacts-operations';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nlet userSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(/^[A-Za-z]+$/, 'Name should not contain numbers')\n    .required(),\n  number: yup.number('Number should not contains letters').required(),\n});\n\nfunction Form() {\n  const [dataForm, setDataForm] = useState({\n    name: '',\n    number: '',\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(userSchema),\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const nameChange = event => {\n    const { name, value } = event.target;\n    setDataForm({\n      ...dataForm,\n      [name]: value,\n    });\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    const isValid = await userSchema.isValid(dataForm);\n\n    if (isValid) {\n      for (const contact of contacts) {\n        if (\n          dataForm.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\n        ) {\n          return Notify.failure(`${dataForm.name} is already in contacts.`);\n        }\n      }\n\n      dispatch(addContact(dataForm));\n      reset();\n      Notify.success('Ð¡ontact added successfully');\n    } else {\n      return Notify.failure('Please enter correct data');\n    }\n  };\n\n  const reset = () => {\n    setDataForm({\n      name: '',\n      number: '',\n    });\n  };\n\n  const errorMessageName =\n    !!errors?.name?.message && 'Name should not contain numbers';\n  const errorMessageNumber =\n    !!errors?.number?.message && 'Number should not contains letters';\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1 },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => handleSubmit(onSubmit(e))}\n      className={css.form}\n    >\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"name\"\n        required\n        {...register('name')}\n        value={dataForm.name}\n        onChange={nameChange}\n        error={!!errors?.name?.message}\n        helperText={errorMessageName}\n      />\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Phone\"\n        variant=\"outlined\"\n        type=\"tel\"\n        name=\"number\"\n        required\n        {...register('number')}\n        value={dataForm.number}\n        onChange={nameChange}\n        error={!!errors?.number?.message}\n        helperText={errorMessageNumber}\n      />\n      <button type=\"submit\" className={css.btn}>\n        Add Contact\n      </button>\n    </Box>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactList_btn__6Piat\",\"name\":\"ContactList_name__UCkFW\",\"list\":\"ContactList_list__csErn\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllTasks = state => state.contacts.contacts.items;\n\nexport const selectVisibleFilter = createSelector(\n  [selectAllTasks, selectFilter],\n  (contacts, filter) => {\n    const workingFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(workingFilter)\n    );\n  }\n);","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { selectVisibleFilter } from 'redux/contacts/contacts-selectors';\n\nexport const List = () => {\n  const dispatch = useDispatch();\n  const contactsFilter = useSelector(selectVisibleFilter);\n\n  return (\n    <ul className={css.list}>\n      {contactsFilter.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={css.name}>\n            {name}: {number}\n            <button\n              className={css.btn}\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n\nList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contacts-slice';\n\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Box component=\"div\">\n      <TextField\n        label=\"Find contact by name\"\n        variant=\"outlined\"\n        className={css.input}\n        onChange={e => dispatch(filterContact(e.target.value))}\n        fullWidth\n       \n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  filter: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\"};","import  Form  from 'components/ContactsForm/ContactsForm';\nimport { List }  from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter';\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  return (\n    <div className={css.container}>\n      <Form />\n      <Filter />\n      <List />\n    </div>\n  );\n}\n"],"names":["userSchema","yup","shape","name","matches","required","number","useState","dataForm","setDataForm","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","formState","dispatch","useDispatch","contacts","useSelector","state","items","useEffect","fetchContacts","nameChange","event","target","value","onSubmit","preventDefault","isValid","contact","toLocaleLowerCase","Notify","addContact","reset","errorMessageName","message","errorMessageNumber","Box","component","sx","m","noValidate","autoComplete","e","className","css","TextField","id","label","variant","type","onChange","error","helperText","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectVisibleFilter","filter","workingFilter","toLowerCase","includes","List","contactsFilter","onClick","deleteContact","filterContact","fullWidth","Contacts"],"sourceRoot":""}